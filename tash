[33mcommit ef8b4fdc3754a7ed4ea09202069626b0ac026f84[m[33m ([m[1;36mHEAD[m[33m -> [m[1;32mmain[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m)[m
Author: Arnav Kumar <arnav9637@gmail.com>
Date:   Sat Jun 7 14:20:11 2025 +0530

    pushed all changes from local as the local app works

[1mdiff --git a/.gitignore b/.gitignore[m
[1mindex 4c49bd7..745a8e8 100644[m
[1m--- a/.gitignore[m
[1m+++ b/.gitignore[m
[36m@@ -1 +1,12 @@[m
[32m+[m[32msmart_env[m
 .env[m
[32m+[m[32mdata/[m
[32m+[m[32m.git/[m
[32m+[m[32m__pycache__/[m
[32m+[m[32m*.pyc[m
[32m+[m[32m*.pyo[m
[32m+[m[32m*.pyd[m
[32m+[m[32m.env[m
[32m+[m[32mDockerfile[m
[32m+[m[32mdocker-compose*[m
[32m+[m[32mREADME.md[m
\ No newline at end of file[m
[1mdiff --git a/app/auth/__pycache__/auth_utils.cpython-313.pyc b/app/auth/__pycache__/auth_utils.cpython-313.pyc[m
[1mindex 7419a1a..e50debb 100644[m
Binary files a/app/auth/__pycache__/auth_utils.cpython-313.pyc and b/app/auth/__pycache__/auth_utils.cpython-313.pyc differ
[1mdiff --git a/app/config.py b/app/config.py[m
[1mindex 1bb65bc..d4ce846 100644[m
[1m--- a/app/config.py[m
[1m+++ b/app/config.py[m
[36m@@ -6,6 +6,12 @@[m [mdef load_env_vars():[m
 [m
 # Define base directories[m
 # Change from app/data to root data directory[m
[32m+[m
[32m+[m
[32m+[m[32m# Lock to specific embedding model[m
[32m+[m[32mEMBEDDING_MODEL_NAME = "sentence-transformers/all-MiniLM-L6-v2"[m
[32m+[m[32mEMBEDDING_DIM = 384[m
[32m+[m
 # Base data directory at project root[m
 BASE_DATA_DIR = os.path.join(os.getcwd(), 'data')[m
 [m
[36m@@ -19,3 +25,4 @@[m [mdef create_required_directories():[m
     os.makedirs(UPLOAD_DIR, exist_ok=True)[m
     os.makedirs(VECTOR_STORE_DIR, exist_ok=True)[m
     os.makedirs(DB_DIR, exist_ok=True)[m
[41m+[m
[1mdiff --git a/app/frontend/__pycache__/auth_wrapper.cpython-313.pyc b/app/frontend/__pycache__/auth_wrapper.cpython-313.pyc[m
[1mindex 3304097..8ac563e 100644[m
Binary files a/app/frontend/__pycache__/auth_wrapper.cpython-313.pyc and b/app/frontend/__pycache__/auth_wrapper.cpython-313.pyc differ
[1mdiff --git a/app/frontend/__pycache__/frontend_utils.cpython-313.pyc b/app/frontend/__pycache__/frontend_utils.cpython-313.pyc[m
[1mindex b9ae5bf..7d59205 100644[m
Binary files a/app/frontend/__pycache__/frontend_utils.cpython-313.pyc and b/app/frontend/__pycache__/frontend_utils.cpython-313.pyc differ
[1mdiff --git a/app/frontend/app.py b/app/frontend/app.py[m
[1mindex 665c87b..9570ea1 100644[m
[1m--- a/app/frontend/app.py[m
[1m+++ b/app/frontend/app.py[m
[36m@@ -5,7 +5,7 @@[m [mimport os[m
 import time[m
 from typing import Dict, List, Optional, Tuple[m
 from datetime import datetime, timezone[m
[31m-import pytz[m
[32m+[m[32mimport pytz  # You'll need to add pytz to requirements.txt[m
 [m
 [m
 from frontend_utils import export_summary_as_txt[m
[36m@@ -22,8 +22,7 @@[m [mdef error_boundary():[m
         st.stop()[m
 [m
 # API endpoint[m
[31m-[m
[31m-API_URL = os.getenv("API_URL", "https://smartdoc-ai-production.up.railway.app")[m
[32m+[m[32mAPI_URL = "http://localhost:8000"[m
 [m
 # Session state initialization[m
 if "authenticated" not in st.session_state:[m
[36m@@ -368,11 +367,16 @@[m [mst.set_page_config([m
     initial_sidebar_state="expanded"[m
 )[m
 [m
[32m+[m[32m# Then continue with your existing code...[m
 def load_css():[m
[31m-    css_path = os.path.join(os.path.dirname(__file__), "styles.css")[m
[31m-    with open(css_path) as f:[m
[32m+[m[32m    with open("styles.css") as f:[m
         st.markdown(f"<style>{f.read()}</style>", unsafe_allow_html=True)[m
 [m
[32m+[m[32mdef load_css():[m
[32m+[m[32m    with open('app/frontend/styles.css') as f:[m
[32m+[m[32m        st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)[m
[32m+[m
[32m+[m
 def render_login_page():[m
     """Render the login page"""[m
     st.markdown('<h1 class="main-header">ü§ñ SmartDoc AI</h1>', unsafe_allow_html=True)[m
[36m@@ -615,7 +619,7 @@[m [mdef render_main_app():[m
                     st.download_button([m
                         label="‚¨áÔ∏è Export Summary as TXT",[m
                         data=export_summary_as_txt(doc.get('summary', ''), doc.get('filename', f"document_{doc['id']}.txt")),[m
[31m-                        file_name=f"summary_{doc.get('filename', 'document_' + str(doc['id']))}.txt",[m
[32m+[m[32m                        file_name=f"summary_{doc.get('filename', f'document_{doc['id']}')}.txt",[m
                         mime="text/plain",[m
                         key=f"export_sum_{doc['id']}"[m
                     )[m
[1mdiff --git a/app/models/__pycache__/document.cpython-313.pyc b/app/models/__pycache__/document.cpython-313.pyc[m
[1mindex 61040ee..2575e48 100644[m
Binary files a/app/models/__pycache__/document.cpython-313.pyc and b/app/models/__pycache__/document.cpython-313.pyc differ
[1mdiff --git a/app/routes/__pycache__/admin.cpython-313.pyc b/app/routes/__pycache__/admin.cpython-313.pyc[m
[1mindex a5e688f..d5b3367 100644[m
Binary files a/app/routes/__pycache__/admin.cpython-313.pyc and b/app/routes/__pycache__/admin.cpython-313.pyc differ
[1mdiff --git a/app/routes/__pycache__/ask.cpython-313.pyc b/app/routes/__pycache__/ask.cpython-313.pyc[m
[1mindex 35dc263..32fd8c0 100644[m
Binary files a/app/routes/__pycache__/ask.cpython-313.pyc and b/app/routes/__pycache__/ask.cpython-313.pyc differ
[1mdiff --git a/app/routes/__pycache__/auth.cpython-313.pyc b/app/routes/__pycache__/auth.cpython-313.pyc[m
[1mindex 2124889..3c32eb2 100644[m
Binary files a/app/routes/__pycache__/auth.cpython-313.pyc and b/app/routes/__pycache__/auth.cpython-313.pyc differ
[1mdiff --git a/app/routes/__pycache__/delete.cpython-313.pyc b/app/routes/__pycache__/delete.cpython-313.pyc[m
[1mindex ebbd37e..98abe71 100644[m
Binary files a/app/routes/__pycache__/delete.cpython-313.pyc and b/app/routes/__pycache__/delete.cpython-313.pyc differ
[1mdiff --git a/app/routes/__pycache__/upload.cpython-313.pyc b/app/routes/__pycache__/upload.cpython-313.pyc[m
[1mindex 0e24df2..f305639 100644[m
Binary files a/app/routes/__pycache__/upload.cpython-313.pyc and b/app/routes/__pycache__/upload.cpython-313.pyc differ
[1mdiff --git a/app/routes/__pycache__/vectorize.cpython-313.pyc b/app/routes/__pycache__/vectorize.cpython-313.pyc[m
[1mindex b153b2c..5884bd7 100644[m
Binary files a/app/routes/__pycache__/vectorize.cpython-313.pyc and b/app/routes/__pycache__/vectorize.cpython-313.pyc differ
[1mdiff --git a/app/routes/ask.py b/app/routes/ask.py[m
[1mindex df89c38..9d5a4f9 100644[m
[1m--- a/app/routes/ask.py[m
[1m+++ b/app/routes/ask.py[m
[36m@@ -62,7 +62,7 @@[m [masync def qa_query(payload: QAModel, db: Session = Depends(get_db), current_user[m
     vector_store_path = os.path.join(VECTOR_STORE_DIR, document.file_hash)[m
 [m
     try:[m
[31m-        vector_store = load_vector_store(vector_store_path)[m
[32m+[m[32m        vector_store = load_vector_store(vector_store_path)  # Now matches signature[m
         retriever = setup_retriever(vector_store)[m
         llm = get_llm()[m
 [m
[36m@@ -84,5 +84,20 @@[m [masync def qa_query(payload: QAModel, db: Session = Depends(get_db), current_user[m
 [m
     except FileNotFoundError as fnf:[m
         raise HTTPException(status_code=404, detail=str(fnf))[m
[32m+[m[32m    try:[m
[32m+[m[32m        answer, sources = process_qa_request([m
[32m+[m[32m            document_id=document.id,[m
[32m+[m[32m            query=payload.question,[m
[32m+[m[32m            filename=document.filename,[m
[32m+[m[32m            file_hash=document.file_hash[m
[32m+[m[32m        )[m
[32m+[m[32m        return {"answer": answer, "sources": sources}[m
[32m+[m[32m    except RuntimeError as e:[m
[32m+[m[32m        logger.error(f"Q&A failed: {str(e)}")[m
[32m+[m[32m        raise HTTPException(status_code=500, detail=str(e))[m
     except Exception as e:[m
[31m-        raise HTTPException(status_code=500, detail=f"Q&A fai